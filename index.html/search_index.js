var searchModuleIndex = [
"graphs",
];

var searchIndex = [
"Graph[T]",
"bfs",
"complement",
"degeneracy",
"degree_list",
"degree_map",
"density",
"dfs",
"diameter",
"eccentricity",
"girth",
"has_eulerian_path",
"is_acyclic",
"is_bipartite",
"is_complete",
"is_connected",
"is_cycle",
"is_eulerian",
"is_regular",
"is_tree",
"line_graph",
"max_degree",
"min_degree",
"num_connected_components",
"num_edges",
"num_nodes",
"num_spanning_trees",
"num_triangles",
"radius",
"to_adjacency",
"to_adjacency_matrix",
"to_graph6",
"cycle_graph",
"path_graph",
"complete_graph",
"complete_bipartite_graph",
"star_graph",
"wheel_graph",
"Graph.from_adjacency",
"Graph.from_adjacency_matrix",
"Graph.from_graph6",
"Node",
"Edge",
"Graph",
];

var searchModuleData = [
["","graphs.html"],
];

var searchData = [
["graphs","","graphs.html#Graph[T]","type "],
["graphs","Runs a breadth-first search (bfs) on the first node in nodes list of the Graph o","graphs.html#Graph[T].bfs","fn (Graph[T])"],
["graphs","Gives the complement of a graph. The list of (references to) nodes is copied, so","graphs.html#Graph[T].complement","fn (Graph[T])"],
["graphs","Returns the degeneracy the graph. It implements the algorithm described by Matul","graphs.html#Graph[T].degeneracy","fn (Graph[T])"],
["graphs","Returns a list of the degrees of the graph, not necessarily ordered.","graphs.html#Graph[T].degree_list","fn (Graph[T])"],
["graphs","Returns a map of the degrees of the graph. The keys are the indices of the nodes","graphs.html#Graph[T].degree_map","fn (Graph[T])"],
["graphs","Returns the density of the graph.","graphs.html#Graph[T].density","fn (Graph[T])"],
["graphs","Runs a depth-first search (dfs) on the first node in nodes list of the Graph obj","graphs.html#Graph[T].dfs","fn (Graph[T])"],
["graphs","Returns the diameter of the graph, this implementation only works for connected ","graphs.html#Graph[T].diameter","fn (Graph[T])"],
["graphs","Returns the eccentricity of a given node.","graphs.html#Graph[T].eccentricity","fn (Graph[T])"],
["graphs","Returns the girth of the graph.","graphs.html#Graph[T].girth","fn (Graph[T])"],
["graphs","Checks whether the graph contains an Eulerian path.","graphs.html#Graph[T].has_eulerian_path","fn (Graph[T])"],
["graphs","Checks whether the graph is acyclic, i.e. does not contain a cycle. This differs","graphs.html#Graph[T].is_acyclic","fn (Graph[T])"],
["graphs","Checks whether the graph is bipartite.","graphs.html#Graph[T].is_bipartite","fn (Graph[T])"],
["graphs","Checks whether the graph is a complete graph.","graphs.html#Graph[T].is_complete","fn (Graph[T])"],
["graphs","Checks whether the graph is connected.","graphs.html#Graph[T].is_connected","fn (Graph[T])"],
["graphs","Checks whether the graph is a cycle.","graphs.html#Graph[T].is_cycle","fn (Graph[T])"],
["graphs","Checks whether the graph is Eulerian.","graphs.html#Graph[T].is_eulerian","fn (Graph[T])"],
["graphs","Checks whether the graph is regular.","graphs.html#Graph[T].is_regular","fn (Graph[T])"],
["graphs","Checks whether the graph is a tree.","graphs.html#Graph[T].is_tree","fn (Graph[T])"],
["graphs","Gives the line graph of a graph. The list of (references to) nodes is copied, so","graphs.html#Graph[T].line_graph","fn (Graph[T])"],
["graphs","Returns the maximum degree of the graph.","graphs.html#Graph[T].max_degree","fn (Graph[T])"],
["graphs","Returns the minimum degree of the graph.","graphs.html#Graph[T].min_degree","fn (Graph[T])"],
["graphs","Returns the number of connected components of the graph.","graphs.html#Graph[T].num_connected_components","fn (Graph[T])"],
["graphs","Returns the number of edges of a graph, also accesible through `graph.edges.len`","graphs.html#Graph[T].num_edges","fn (Graph[T])"],
["graphs","Returns the number of nodes of a graph, also accesible through `graph.nodes.len`","graphs.html#Graph[T].num_nodes","fn (Graph[T])"],
["graphs","Returns the number of spanning trees of the graph.","graphs.html#Graph[T].num_spanning_trees","fn (Graph[T])"],
["graphs","Returns the number of triangles of the graph.","graphs.html#Graph[T].num_triangles","fn (Graph[T])"],
["graphs","Returns the radius of the graph, this implementation only works for connected gr","graphs.html#Graph[T].radius","fn (Graph[T])"],
["graphs","Formats a graph into an adjacency mapping of the graph. The keys represent the i","graphs.html#Graph[T].to_adjacency","fn (Graph[T])"],
["graphs","Gives the (symmetric) adjacency matrix of the graph. The order of the rows and c","graphs.html#Graph[T].to_adjacency_matrix","fn (Graph[T])"],
["graphs","Returns the graph6 format of the given graph.","graphs.html#Graph[T].to_graph6","fn (Graph[T])"],
["graphs","Generates a cycle graph on n nodes. The graph's nodes are integer values from 0 ","graphs.html#cycle_graph","fn "],
["graphs","Generates a path graph on n nodes. The nodes of the graph are integers, from 0 t","graphs.html#path_graph","fn "],
["graphs","Generates a complete graph on n nodes. The nodes of the graph are integers, from","graphs.html#complete_graph","fn "],
["graphs","Generates a complete bipartite graph on n \times m nodes, with respectively n an","graphs.html#complete_bipartite_graph","fn "],
["graphs","Generates a star graph on n nodes. In this case a star graph on n nodes has n-1 ","graphs.html#star_graph","fn "],
["graphs","Generates a wheel graph on n nodes. In this case a wheel graph on n nodes has n-","graphs.html#wheel_graph","fn "],
["graphs","Generates a graph from a mapping with the following signature: `map[T][]T`, with","graphs.html#Graph.from_adjacency","fn "],
["graphs","Generate a graph from an integer matrix, returns a graph with integer values for","graphs.html#Graph.from_adjacency_matrix","fn "],
["graphs","Generates a graph from a graph6 string, any invalid string will panic. For more ","graphs.html#Graph.from_graph6","fn "],
["graphs","A node that contains a value of type `T` in the mutable field `x`. Nodes are sto","graphs.html#Node","struct "],
["graphs","An edge contains two references to nodes of type `T`.","graphs.html#Edge","struct "],
["graphs","A graph is a list of references to nodes and a list of references to edges made ","graphs.html#Graph","struct "],
];

